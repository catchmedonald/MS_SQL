
--ASSIGNMENT-9

--A-1 : CREATE A FUNCTION FOR AUTOGENERATION OF 5 CHARACTERS ALPHA NUMERIC ID. IT
--SHOULD ACCEPT 2 PARAMETERS A CHARACTER AND THE NUMBER AND RETURN THE ID BY
--CONCANATING THE CHARACTER , REQUIRED ZEROS AND THE SPECIFIED NUMBER.
DROP FUNCTION GENID;
CREATE FUNCTION GENID (@A AS CHAR(1), @N AS INT)		-- FUNCTION USING IF ELSE
RETURNS CHAR(5)
AS
BEGIN

		DECLARE @ID AS CHAR(5);
		
		IF @N <10
		SET @ID = CONCAT(@A,'000',@N);
		ELSE IF @N <100
		SET @ID = CONCAT(@A,'00',@N);
		ELSE IF @N <1000
		SET @ID = CONCAT(@A,'0',@N);
		ELSE IF @N <10000
		SET @ID = CONCAT(@A,@N);
		ELSE
		SET @ID = NULL;

		RETURN @ID;
END

SELECT DBO.GENID('E',100);
SELECT DBO.GENID('E',10000);

CREATE FUNCTION GENIDSW (@A AS CHAR(1), @N AS INT)			-- FUNCTION USING SELECT CASE (SELECT CASE ARE FASTER WHEN COMPARED TO IF ELSE)
RETURNS CHAR(5)
AS
BEGIN

		DECLARE @ID AS CHAR(5);
		
		SELECT @ID = CASE 
				WHEN @N < 10 THEN CONCAT(@A,'000',@N)
				WHEN @N < 100 THEN CONCAT(@A,'00',@N)
				WHEN @N < 1000 THEN CONCAT(@A,'0',@N)
				WHEN @N < 10000 THEN CONCAT(@A,@N)
				ELSE NULL
		END;
		
		RETURN @ID;
END

SELECT DBO.GENIDSW('E',12);

--RECREATE BELOW PROCEDURES IN THE INVENTORY DATABASE AS SPECIFIED (ALL THE ID s SHOULD BE
--AUTOMATICALLY GENERATED USING ABOVE CREATED FUNCTION AND SEQUENCES) :
--ADDSUPPLIER - SHOULD ADD THE SUPPLIER IN THE SUPLIER TABLE AND DISPLAY THE DETAILS OF THE
--NEW SUPPLIER ADDED.

CREATE SEQUENCE SUP_SEQ 
AS INT 
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 999;

USE DEMO;
SELECT * FROM SUPPLIER;
DROP PROCEDURE AD_SUP;
CREATE PROCEDURE AD_SUP @SNAME AS VARCHAR(30), @SADD AS VARCHAR(50), @SPHONE AS VARCHAR(15), @EMAIL AS VARCHAR(50)
AS
BEGIN
		INSERT INTO SUPPLIER (SID, SNAME, SADD, SPHONE, EMAIL)
		VALUES (DBO.GENIDSW('S',NEXT VALUE FOR SUP_SEQ),@SNAME ,@SADD, @SPHONE, @EMAIL)

		SELECT * FROM SUPPLIER;
END;

CREATE PROCEDURE AD_SUP @SNAME AS VARCHAR(30), @SADD AS VARCHAR(50), @SPHONE AS VARCHAR(15), @EMAIL AS VARCHAR(50)
AS
BEGIN
		DECLARE @SID CHAR(5)
		SET @SID = DBO.GENIDSW('S',NEXT VALUE FOR SUP_SEQ)
		INSERT INTO SUPPLIER (SID, SNAME, SADD, SPHONE, EMAIL)
		VALUES (@SID,@SNAME ,@SADD, @SPHONE, @EMAIL)

		SELECT * FROM SUPPLIER WHERE SID =@SID;
END;

AD_SUP 'GOOGLE', 'TEXAS CITY', '4574548457', 'GOOGLE@GMAIL.COM';
AD_SUP 'YAHOO', 'MAIAMI CITY', '7846465484', 'YAHOO@YAHOO.COM';
AD_SUP 'TWITTER', 'MUSK CITY', '4654688858', 'TWITTER@TWITTER.COM';

--ADDPRO - SHOULD ADD THE PRODUCT IN THE PRODUCT TABLE AND DISPLAY THE DETAILS OF THE
--NEW PRODUCT ADDED.

SELECT * FROM PRODUCT;

CREATE SEQUENCE PRO_SEQ 
AS INT 
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE AD_PRO @PDESC AS VARCHAR(50), @PRICE AS INT, @CATEGORY AS CHAR(2), @SID AS CHAR(5)
AS
BEGIN
		DECLARE @PID CHAR(5)
		SET @PID = DBO.GENIDSW('P',NEXT VALUE FOR PRO_SEQ)
		INSERT INTO PRODUCT (PID, PDESC, PRICE, CATEGORY, SID)
		VALUES (@PID, @PDESC, @PRICE, @CATEGORY, @SID)

		SELECT * FROM PRODUCT WHERE PID = @PID;
END;

AD_PRO 'MOUSE', 300, 'IT', 'S0001';


--ADDCUST - SHOULD ADD THE CUSTOMER IN THE CUSTOMER TABLE AND DISPLAY THE DETAILS OF
--THE NEW CUSTOMER ADDED.

SELECT * FROM CUST;
CREATE SEQUENCE CUST_SEQ 
AS INT 
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE AD_CUST @CNAME AS VARCHAR(30), @CADDRESS AS VARCHAR(50), @CITY AS vARCHAR(20), @PHONE AS VARCHAR(15), @EMAIL AS VARCHAR(50), @DOB AS DATE
AS
BEGIN
		DECLARE @CID CHAR(5)
		SET @CID = DBO.GENIDSW('C',NEXT VALUE FOR CUST_SEQ)
		INSERT INTO CUST (CID, CNAME, CADDRESS, CITY, PHONE, EMAIL, DOB)
		VALUES (@CID, @CNAME, @CADDRESS, @CITY, @PHONE, @EMAIL, @DOB)

		SELECT * FROM CUST WHERE CID = @CID;
END;

AD_CUST 'ARUN KUMAR', 'GREENWAY ROAD', 'TEXAS', '5454545455', 'ARUNVI@TGMAIL.COM', '02-06-1990'

--ADDORDER - SHOULD ADD THE ORDER IN THE ORDERS TABLE AND DISPLAY THE DETAILS OF THE
--ORDER. ORDER DATE SHOULD BE CURRENT DATE AND SHOULD COME AUTOMATICALLY.

SELECT * FROM ORDERS;
CREATE SEQUENCE ORD_SEQ 
AS INT 
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE AD_ORD @CID AS CHAR(5), @PID AS CHAR(5),@OQTY AS INT
AS
BEGIN
		DECLARE @OID CHAR(5)
		SET @OID = DBO.GENIDSW('O',NEXT VALUE FOR ORD_SEQ)
		INSERT INTO ORDERS(OID, ODATE, CID, PID, OQTY)
		VALUES (@OID, GETDATE(), @CID, @PID, @OQTY)

		SELECT * FROM ORDERS WHERE OID = @OID;
END;

AD_ORD 'C0001','P0001', 2;
